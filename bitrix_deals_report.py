import requests
from fpdf import FPDF
from datetime import datetime

# üîß –í–°–¢–ê–í–¨ –°–í–û–ô WEBHOOK
WEBHOOK_URL = "https://b24-mwcobf.bitrix24.ru/rest/1/671oflp23zoilljq/crm.deal.list.json"

def get_deals():
    params = {
        "select": ["ID", "TITLE", "STAGE_ID", "OPPORTUNITY", "CURRENCY_ID", "DATE_CREATE", "DATE_CLOSE"]
    }
    response = requests.get(WEBHOOK_URL, params=params)
    response.raise_for_status()
    return response.json().get("result", [])

def generate_pdf_report(deals, filename="bitrix_deals_report.pdf"):
    pdf = FPDF()
    pdf.add_page()
    
    # ‚úÖ –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–π —à—Ä–∏—Ñ—Ç
    pdf.add_font("DejaVu", "", "fonts/DejaVuSans.ttf", uni=True)
    pdf.set_font("DejaVu", size=9)

    pdf.cell(200, 10, txt="–û—Ç—á–µ—Ç –ø–æ —Å–¥–µ–ª–∫–∞–º Bitrix24", ln=True, align="C")
    pdf.cell(200, 10, txt=f"–î–∞—Ç–∞: {datetime.now().strftime('%d.%m.%Y %H:%M')}", ln=True, align="C")
    pdf.ln(10)

    # üßæ –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
    headers = ["ID", "–ù–∞–∑–≤–∞–Ω–∏–µ", "–°—É–º–º–∞", "–í–∞–ª—é—Ç–∞", "–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è", "–î–∞—Ç–∞ –∑–∞–∫—Ä—ã—Ç–∏—è", "–§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞–¥–∏—è"]
    col_widths = [15, 50, 20, 20, 30, 30, 30]

    for i, header in enumerate(headers):
        pdf.cell(col_widths[i], 10, header, 1)
    pdf.ln()

    # üìä –°–≤–æ–¥–∫–∞
    total_sum = 0
    total_count = 0
    success_count = 0

    for deal in deals:
        total_count += 1
        amount = float(deal.get("OPPORTUNITY", 0) or 0)
        total_sum += amount

        stage = deal.get("STAGE_ID", "-")
        if stage == "WON":  # ‚ö†Ô∏è –ù–∞—Å—Ç—Ä–æ–π —ç—Ç–æ –ø–æ–¥ —Å–≤–æ—é —Å—Ç–∞–¥–∏—é "—É—Å–ø–µ—à–Ω–æ"
            success_count += 1

        pdf.cell(col_widths[0], 10, str(deal.get("ID", "-")), 1)
        pdf.cell(col_widths[1], 10, str(deal.get("TITLE", "-")), 1)
        pdf.cell(col_widths[2], 10, str(amount), 1)
        pdf.cell(col_widths[3], 10, str(deal.get("CURRENCY_ID", "-")), 1)

        date_create = deal.get("DATE_CREATE", "-").split("T")[0] if deal.get("DATE_CREATE") else "-"
        date_close = deal.get("DATE_CLOSE", "-").split("T")[0] if deal.get("DATE_CLOSE") else "-"
        pdf.cell(col_widths[4], 10, date_create, 1)
        pdf.cell(col_widths[5], 10, date_close, 1)
        pdf.cell(col_widths[6], 10, stage, 1)
        pdf.ln()

    # üìå –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞
    pdf.ln(10)
    pdf.set_font("DejaVu", size=10)
    pdf.cell(200, 10, f"–°–≤–æ–¥–∫–∞ –∑–∞ {datetime.now().year} –≥–æ–¥:", ln=True)
    pdf.cell(200, 10, f"–í—Å–µ–≥–æ —Å–¥–µ–ª–æ–∫: {total_count}", ln=True)
    pdf.cell(200, 10, f"–°—É–º–º–∞—Ä–Ω–∞—è —Å—É–º–º–∞: {total_sum}", ln=True)
    pdf.cell(200, 10, f"–£—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ: {success_count}", ln=True)
    pdf.cell(200, 10, f"–ù–∞–ª–æ–≥ –≤ 6%: {total_sum * 0.06}", ln=True)

    pdf.output(filename)
    print(f"‚úÖ PDF —Å–æ—Ö—Ä–∞–Ω—ë–Ω –∫–∞–∫ {filename}")

if __name__ == "__main__":
    print("üì° –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–¥–µ–ª–æ–∫ –∏–∑ Bitrix24...")
    deals = get_deals()
    print(f"üîç –ü–æ–ª—É—á–µ–Ω–æ —Å–¥–µ–ª–æ–∫: {len(deals)}")
    generate_pdf_report(deals)
